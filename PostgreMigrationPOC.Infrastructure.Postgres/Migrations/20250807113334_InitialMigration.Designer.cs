// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PostgreMigrationPOC.Infrastructure.Postgres.Data;

#nullable disable

namespace PostgreMigrationPOC.Infrastructure.Postgres.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    [Migration("20250807113334_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("BigIntField")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("BinaryField")
                        .HasColumnType("bytea");

                    b.Property<bool>("BooleanField")
                        .HasColumnType("boolean");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("CharField")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<DateOnly>("DateField")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateTime2Field")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateTimeField")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTimeOffset>("DateTimeOffsetField")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("DecimalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("FloatField")
                        .HasColumnType("double precision");

                    b.Property<string>("GeographyField")
                        .HasColumnType("text");

                    b.Property<string>("GeometryField")
                        .HasColumnType("text");

                    b.Property<Guid>("GuidField")
                        .HasColumnType("uuid");

                    b.Property<string>("HierarchyIdField")
                        .HasColumnType("text");

                    b.Property<decimal>("MoneyField")
                        .HasColumnType("money");

                    b.Property<string>("NcharField")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<string>("NtextField")
                        .HasColumnType("text");

                    b.Property<string>("NvarcharField")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("RealField")
                        .HasColumnType("real");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bytea");

                    b.Property<DateTime>("SmallDateTimeField")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("SmallIntField")
                        .HasColumnType("smallint");

                    b.Property<decimal>("SmallMoneyField")
                        .HasColumnType("money");

                    b.Property<string>("TextField")
                        .HasColumnType("text");

                    b.Property<TimeOnly>("TimeField")
                        .HasColumnType("time without time zone");

                    b.Property<byte>("TinyIntField")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("VarbinaryField")
                        .HasColumnType("bytea");

                    b.Property<string>("VarcharField")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("XmlField")
                        .HasColumnType("xml");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.ProductDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DetailedDescription")
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerInfo")
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("Specifications")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.ProductTag", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AssignedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.Product", b =>
                {
                    b.HasOne("PostgreMigrationPOC.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.ProductDetail", b =>
                {
                    b.HasOne("PostgreMigrationPOC.Core.Entities.Product", "Product")
                        .WithOne("ProductDetail")
                        .HasForeignKey("PostgreMigrationPOC.Core.Entities.ProductDetail", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.ProductTag", b =>
                {
                    b.HasOne("PostgreMigrationPOC.Core.Entities.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PostgreMigrationPOC.Core.Entities.Tag", "Tag")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.Product", b =>
                {
                    b.Navigation("ProductDetail");

                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("PostgreMigrationPOC.Core.Entities.Tag", b =>
                {
                    b.Navigation("ProductTags");
                });
#pragma warning restore 612, 618
        }
    }
}
